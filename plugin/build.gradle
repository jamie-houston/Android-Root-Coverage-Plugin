plugins {
    id "org.jetbrains.kotlin.jvm"
    id "java-gradle-plugin"
    id 'maven-publish'
    id "com.gradle.plugin-publish"
}

version = "0.1.1"

// To upload new plugin artifact Gradle Portal:
// > ./gradlew publishPlugins
//
// To upload new plugin artifact to Maven Central Repository:
// > ./gradlew publishPluginMavenPublicationToMavenCentralRepository --no-daemon --no-parallel
//
// To test the plugin:
// > ./gradlew clean test

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8


publishing {
    repositories {
        maven {
            name = "mavenCentral"
            credentials {
                Properties properties = new Properties()
                try {
                    properties.load(project.rootProject.file('local.properties').newDataInputStream())
                } catch(FileNotFoundException ignored) {
                    logger.warn("local.properties file with ossrhUsername and ossrhPassword properties was not found.")
                }
                username = properties.getProperty("ossrhUsername")
                password = properties.getProperty("ossrhPassword")
            }
        }
    }
}

gradlePlugin {
    plugins {
        rootCoverage {
            id = 'nl.neotech.plugin.rootcoverage'
            implementationClass = 'org.neotech.plugin.rootcoverage.RootCoveragePlugin'
        }
    }
}

pluginBundle {
    setWebsite(POM_URL)
    vcsUrl = POM_SCM_URL
    setDescription(POM_DESCRIPTION)
    tags = ['android', 'coverage', 'jacoco', 'code-coverage', 'coverage-report', 'aggregated-report']

    plugins {
        rootCoverage {
            displayName = 'Android-Root-Coverage-Plugin'
        }
    }

    mavenCoordinates {
        groupId = GROUP
        artifactId = POM_ARTIFACT_ID
        version = VERSION_NAME
    }
}

test {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showStandardStreams true
    }
}

dependencies {
    compileOnly gradleApi()
    implementation projectDependency.androidGradlePlugin
    implementation projectDependency.kotlinStdlibJdk8

    testImplementation projectDependency.kotlinStdlibJdk8
    testImplementation projectDependency.kotlinTest
    testImplementation gradleTestKit()
    testImplementation projectDependency.junit
    testImplementation projectDependency.truth
    testImplementation projectDependency.commonsCsv
}
